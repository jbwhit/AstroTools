#!/usr/bin/env python
# AICc.py 
# parses the Stat line of vpfit output and analyzes the AICc statistic test
# ! Stats: iterations, normalized x2, number of pixels, number of degrees of freedom, chance probability that the fit is OK, number of systems dropped in finding solution
# Akaike information criterion http://en.wikipedia.org/wiki/Akaike_information_criterion
#  -- values can be compared as long as data is the same between comparisons. i.e. it makes no sense in the absolute sense, only in the model selection, given the data.
# k = number of parameters in the model
# n = samplesize
# AICc = chisquare + 2k + (2k(k + 1))/(n - k - 1) 
# 
# Copyright Jonathan Whitmore
# Distributed under the Boost Software License, Version 1.0.
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated
# by a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
# NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE
# DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY,
# WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# 

import sys
import os
import re
import optparse

def AICc(chisquare, Nparameters, samplesize):
  """Returns the AICc statistic for given inputs"""
  AICc = chisquare + 2 * Nparameters + (2 * Nparameters * (Nparameters + 1)) / (samplesize - Nparameters - 1)
  return AICc

def main():
  p = optparse.OptionParser(description='Returns the statistic for a given *.26 output from VPFIT.')
  options, arguments = p.parse_args()
  with open(arguments[0],'r') as infile:
    for line in infile:
      if re.search('Stat', line):
        chisqnu = float(line.split()[3])
        npix = float(line.split()[4])
        dof = float(line.split()[5])
        chisquare = dof * chisqnu
        Nparameters = npix - dof
        print AICc(chisquare, Nparameters, npix)
  return
  
if __name__ == '__main__':
  main()