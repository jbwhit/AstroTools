#!/usr/bin/env python
# combine-exposures 
# runs in the current directory and looks for fxb_ files that
# were taken as part of the same exposure. 
# Prints to standard out a script that can create separate _red.lists.
# For use with UVES files.

import sys
import os
import numpy as np
import pyfits as pf
import dateutil
import dateutil.parser 
from glob import glob
from itertools import groupby
from operator import itemgetter

TIMEBUFFER = 45.0 # seconds within each other 

listoffiles = []
for filename in glob("fxb_*"):
    if "_up_" in filename:
        continue
    hdu = pf.open(filename)
    basename = filename
    basenamesplit = basename.split("_")
    newbasename = "_".join([basenamesplit[1], "sci", basenamesplit[3], basenamesplit[4] + ".fits"])
    otherhdu = pf.open(newbasename)
    timeexp = otherhdu[0].header["ARCFILE"]
    timeexp = dateutil.parser.parse(".".join(timeexp.split(".")[1:-1]))
    listoffiles.append([filename, timeexp])

# The following is a sloppy way to combine exposures within a TIMEBUFFER
newlist = []
for guts in listoffiles:
    infile, timestamp = guts
    temp = []
    for index, guts2 in enumerate(listoffiles):
        infile2, secondtimestamp = guts2
        timedelt = np.abs(timestamp - secondtimestamp)
        if timedelt.total_seconds() < TIMEBUFFER:
            temp.append(guts2)
    newlist.append(temp)

# This culls the repeats.
brandnewlist = []
for element in newlist:
    if element not in brandnewlist:
        brandnewlist.append(element)
        
PATH = os.getcwd()
for index, row in enumerate(brandnewlist):
    if len(row) > 3:
        print "# Problem!"
    for secondindex, guts in enumerate(sorted(row, key=lambda x: x[0])):
        filename, timestamp = guts
        basenamesplit = filename.split("_")
        if secondindex == 0:
            print "/".join([PATH, filename]), " > ", "_".join([basenamesplit[1], "expo", str(index), "red.list"])
        else:
            print "/".join([PATH, filename]), ">> ", "_".join([basenamesplit[1], "expo", str(index), "red.list"])
    print 
